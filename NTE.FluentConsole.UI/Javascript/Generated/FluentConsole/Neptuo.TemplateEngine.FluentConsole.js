/* Generated by SharpKit 5 v5.3.6 */
if (typeof($CreateDelegate)=='undefined'){
    if(typeof($iKey)=='undefined') var $iKey = 0;
    if(typeof($pKey)=='undefined') var $pKey = String.fromCharCode(1);
    var $CreateDelegate = function(target, func){
        if (target == null || func == null) 
            return func;
        if(func.target==target && func.func==func)
            return func;
        if (target.$delegateCache == null)
            target.$delegateCache = {};
        if (func.$key == null)
            func.$key = $pKey + String(++$iKey);
        var delegate;
        if(target.$delegateCache!=null)
            delegate = target.$delegateCache[func.$key];
        if (delegate == null){
            delegate = function(){
                return func.apply(target, arguments);
            };
            delegate.func = func;
            delegate.target = target;
            delegate.isDelegate = true;
            if(target.$delegateCache!=null)
                target.$delegateCache[func.$key] = delegate;
        }
        return delegate;
    }
}


if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Neptuo$TemplateEngine$FluentConsole$ConsoleDesk = {
    fullname: "Neptuo.TemplateEngine.FluentConsole.ConsoleDesk",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.FluentConsole",
    interfaceNames: ["Neptuo.TemplateEngine.FluentConsole.Bootstrap.IRunnable"],
    Kind: "Class",
    definition: {
        ctor: function (){
            System.Object.ctor.call(this);
        },
        Start: function (){
            $(window).on("resize", $CreateDelegate(this, this.OnWindowResize));
            this.OnWindowResize(null);
        },
        OnWindowResize: function (e){
            $("body").width(window.innerWidth).height(window.innerHeight);
        }
    },
    ctors: [{
        name: "ctor",
        parameters: []
    }
    ],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$FluentConsole$ConsoleDesk);

