/* Generated by SharpKit 5 v5.3.6 */

if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Neptuo$TemplateEngine$Controllers$AsyncControllerContext = {
    fullname: "Neptuo.TemplateEngine.Controllers.AsyncControllerContext",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Controllers.IAsyncControllerContext"],
    Kind: "Class",
    definition: {
        ctor: function (action, parameters, modelBinder, dependencyProvider, messages, onComplete){
            this.onComplete = null;
            this._ActionName = null;
            this._Parameters = null;
            this._ModelBinder = null;
            this._DependencyProvider = null;
            this._Navigation = null;
            this._Messages = null;
            System.Object.ctor.call(this);
            Neptuo.Guard.NotNull$$Object$$String(action, "action");
            Neptuo.Guard.NotNull$$Object$$String(parameters, "parameters");
            Neptuo.Guard.NotNull$$Object$$String(modelBinder, "modelBinder");
            Neptuo.Guard.NotNull$$Object$$String(dependencyProvider, "dependencyProvider");
            Neptuo.Guard.NotNull$$Object$$String(messages, "messages");
            Neptuo.Guard.NotNull$$Object$$String(onComplete, "onComplete");
            this.set_ActionName(action);
            this.set_Parameters(parameters);
            this.set_ModelBinder(modelBinder);
            this.set_DependencyProvider(dependencyProvider);
            this.set_Messages(messages);
            this.onComplete = onComplete;
        },
        ActionName$$: "System.String",
        get_ActionName: function (){
            return this._ActionName;
        },
        set_ActionName: function (value){
            this._ActionName = value;
        },
        Parameters$$: "Neptuo.TemplateEngine.Providers.IParameterProvider",
        get_Parameters: function (){
            return this._Parameters;
        },
        set_Parameters: function (value){
            this._Parameters = value;
        },
        ModelBinder$$: "Neptuo.TemplateEngine.Providers.ModelBinders.IModelBinder",
        get_ModelBinder: function (){
            return this._ModelBinder;
        },
        set_ModelBinder: function (value){
            this._ModelBinder = value;
        },
        DependencyProvider$$: "Neptuo.IDependencyProvider",
        get_DependencyProvider: function (){
            return this._DependencyProvider;
        },
        set_DependencyProvider: function (value){
            this._DependencyProvider = value;
        },
        Navigation$$: "System.String",
        get_Navigation: function (){
            return this._Navigation;
        },
        set_Navigation: function (value){
            this._Navigation = value;
        },
        Messages$$: "Neptuo.TemplateEngine.Providers.MessageStorage",
        get_Messages: function (){
            return this._Messages;
        },
        set_Messages: function (value){
            this._Messages = value;
        },
        OnComplete: function (){
            this.onComplete();
        }
    },
    ctors: [{
        name: "ctor",
        parameters: ["System.String", "Neptuo.TemplateEngine.Providers.IParameterProvider", "Neptuo.TemplateEngine.Providers.ModelBinders.IModelBinder", "Neptuo.IDependencyProvider", "Neptuo.TemplateEngine.Providers.MessageStorage", "System.Action"]
    }
    ],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$AsyncControllerContext);
var Neptuo$TemplateEngine$Controllers$AsyncControllerRegistryBase = {
    fullname: "Neptuo.TemplateEngine.Controllers.AsyncControllerRegistryBase",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Controllers.IAsyncControllerRegistry"],
    Kind: "Class",
    definition: {
        ctor: function (){
            this._Storage = null;
            System.Object.ctor.call(this);
            this.set_Storage(new System.Collections.Generic.Dictionary$2.ctor(System.String.ctor, Neptuo.TemplateEngine.Controllers.IAsyncControllerFactory.ctor));
        },
        Storage$$: "System.Collections.Generic.Dictionary`2[[System.String],[Neptuo.TemplateEngine.Controllers.IAsyncControllerFactory]]",
        get_Storage: function (){
            return this._Storage;
        },
        set_Storage: function (value){
            this._Storage = value;
        },
        Add: function (actionName, factory){
            Neptuo.Guard.NotNull$$Object$$String(actionName, "actionName");
            Neptuo.Guard.NotNull$$Object$$String(factory, "factory");
            this.get_Storage().set_Item$$TKey(actionName, factory);
            return this;
        },
        TryGet: function (actionName, controller){
            Neptuo.Guard.NotNull$$Object$$String(actionName, "actionName");
            var factory;
            if ((function (){
                var $1 = {
                    Value: factory
                };
                var $res = this.get_Storage().TryGetValue(actionName, $1);
                factory = $1.Value;
                return $res;
            }).call(this)){
                controller.Value = factory.Create();
                return true;
            }
            controller.Value = null;
            return false;
        }
    },
    ctors: [{
        name: "ctor",
        parameters: []
    }
    ],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$AsyncControllerRegistryBase);
var Neptuo$TemplateEngine$Controllers$DependencyAsyncControllerFactory = {
    fullname: "Neptuo.TemplateEngine.Controllers.DependencyAsyncControllerFactory",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Controllers.IAsyncControllerFactory"],
    Kind: "Class",
    definition: {
        ctor: function (dependencyProvider, handlerType){
            this._DependencyProvider = null;
            this._HandlerType = null;
            System.Object.ctor.call(this);
            Neptuo.Guard.NotNull$$Object$$String(dependencyProvider, "dependencyContainer");
            Neptuo.Guard.NotNull$$Object$$String(handlerType, "handlerType");
            this.set_DependencyProvider(dependencyProvider);
            this.set_HandlerType(handlerType);
        },
        DependencyProvider$$: "Neptuo.IDependencyProvider",
        get_DependencyProvider: function (){
            return this._DependencyProvider;
        },
        set_DependencyProvider: function (value){
            this._DependencyProvider = value;
        },
        HandlerType$$: "System.Type",
        get_HandlerType: function (){
            return this._HandlerType;
        },
        set_HandlerType: function (value){
            this._HandlerType = value;
        },
        Create: function (){
            return Cast(this.get_DependencyProvider().Resolve(this.get_HandlerType(), null), Neptuo.TemplateEngine.Controllers.IAsyncController.ctor);
        }
    },
    ctors: [{
        name: "ctor",
        parameters: ["Neptuo.IDependencyProvider", "System.Type"]
    }
    ],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$DependencyAsyncControllerFactory);
var Neptuo$TemplateEngine$Controllers$IAsyncController = {
    fullname: "Neptuo.TemplateEngine.Controllers.IAsyncController",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    Kind: "Interface",
    ctors: [],
    IsAbstract: true
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$IAsyncController);
var Neptuo$TemplateEngine$Controllers$IAsyncControllerContext = {
    fullname: "Neptuo.TemplateEngine.Controllers.IAsyncControllerContext",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    Kind: "Interface",
    ctors: [],
    IsAbstract: true
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$IAsyncControllerContext);
var Neptuo$TemplateEngine$Controllers$IAsyncControllerFactory = {
    fullname: "Neptuo.TemplateEngine.Controllers.IAsyncControllerFactory",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    Kind: "Interface",
    ctors: [],
    IsAbstract: true
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$IAsyncControllerFactory);
var Neptuo$TemplateEngine$Controllers$IAsyncControllerRegistry = {
    fullname: "Neptuo.TemplateEngine.Controllers.IAsyncControllerRegistry",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Controllers.Client",
    Kind: "Interface",
    ctors: [],
    IsAbstract: true
};
JsTypes.push(Neptuo$TemplateEngine$Controllers$IAsyncControllerRegistry);

