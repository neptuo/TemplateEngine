/* Generated by SharpKit 5 v5.3.4 */
if (typeof($CreateException)=='undefined') 
{
    var $CreateException = function(ex, error) 
    {
        if(error==null)
            error = new Error();
        if(ex==null)
            ex = new System.Exception.ctor();       
        error.message = ex.message;
        for (var p in ex)
           error[p] = ex[p];
        return error;
    }
}
if (typeof($CreateDelegate)=='undefined'){
    if(typeof($iKey)=='undefined') var $iKey = 0;
    if(typeof($pKey)=='undefined') var $pKey = String.fromCharCode(1);
    var $CreateDelegate = function(target, func){
        if (target == null || func == null) 
            return func;
        if(func.target==target && func.func==func)
            return func;
        if (target.$delegateCache == null)
            target.$delegateCache = {};
        if (func.$key == null)
            func.$key = $pKey + String(++$iKey);
        var delegate;
        if(target.$delegateCache!=null)
            delegate = target.$delegateCache[func.$key];
        if (delegate == null){
            delegate = function(){
                return func.apply(target, arguments);
            };
            delegate.func = func;
            delegate.target = target;
            delegate.isDelegate = true;
            if(target.$delegateCache!=null)
                target.$delegateCache[func.$key] = delegate;
        }
        return delegate;
    }
}
if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Neptuo$TemplateEngine$Web$Controls$ListViewControl =
{
    fullname: "Neptuo.TemplateEngine.Web.Controls.ListViewControl",
    baseTypeName: "Neptuo.TemplateEngine.Web.Controls.TemplateControl",
    assemblyName: "Neptuo.TemplateEngine.Client",
    Kind: "Class",
    definition:
    {
        ctor: function (componentManager, storage, dataContext)
        {
            this.partialGuid = null;
            this.isRenderCalled = false;
            this.isDataLoaded = false;
            this._Source = null;
            this._ItemTemplate = null;
            this._EmptyTemplate = null;
            this._PageSize = null;
            this._PageIndex = null;
            this._DataContext = null;
            this._TotalCount = 0;
            Neptuo.TemplateEngine.Web.Controls.TemplateControl.ctor.call(this, componentManager, storage);
            this.set_DataContext(dataContext);
        },
        Source$$: "Neptuo.TemplateEngine.Web.DataSources.IListDataSource",
        get_Source: function ()
        {
            return this._Source;
        },
        set_Source: function (value)
        {
            this._Source = value;
        },
        ItemTemplate$$: "Neptuo.TemplateEngine.Web.Controls.ITemplate",
        get_ItemTemplate: function ()
        {
            return this._ItemTemplate;
        },
        set_ItemTemplate: function (value)
        {
            this._ItemTemplate = value;
        },
        EmptyTemplate$$: "Neptuo.TemplateEngine.Web.Controls.ITemplate",
        get_EmptyTemplate: function ()
        {
            return this._EmptyTemplate;
        },
        set_EmptyTemplate: function (value)
        {
            this._EmptyTemplate = value;
        },
        PageSize$$: "System.Nullable`1[[System.Int32]]",
        get_PageSize: function ()
        {
            return this._PageSize;
        },
        set_PageSize: function (value)
        {
            this._PageSize = value;
        },
        PageIndex$$: "System.Nullable`1[[System.Int32]]",
        get_PageIndex: function ()
        {
            return this._PageIndex;
        },
        set_PageIndex: function (value)
        {
            this._PageIndex = value;
        },
        DataContext$$: "Neptuo.TemplateEngine.Web.DataContextStorage",
        get_DataContext: function ()
        {
            return this._DataContext;
        },
        set_DataContext: function (value)
        {
            this._DataContext = value;
        },
        TotalCount$$: "System.Int32",
        get_TotalCount: function ()
        {
            return this._TotalCount;
        },
        set_TotalCount: function (value)
        {
            this._TotalCount = value;
        },
        OnInit: function ()
        {
            this.InitComponent(this.get_ItemTemplate());
            if (this.get_ItemTemplate() == null)
                throw $CreateException(new System.ArgumentException.ctor$$String$$String("Missing item template.", "ItemTemplate"), new Error());
            this.InitComponent(this.get_Source());
            if (this.get_Source() == null)
                throw $CreateException(new System.ArgumentException.ctor$$String$$String("Missing data source.", "Source"), new Error());
            this.get_Source().GetData(this.get_PageIndex(), this.get_PageSize(), $CreateDelegate(this, this.OnLoadData));
        },
        Render: function (writer)
        {
            if (!this.isDataLoaded)
            {
                this.isRenderCalled = true;
                writer.Content$$String("Loading data...");
                return;
            }
            Neptuo.TemplateEngine.Web.Controls.TemplateControl.commonPrototype.Render.call(this, writer);
            if (this.get_PageSize() != null)
            {
                writer.Tag("ul").Attribute("class", "pagination pagination-sm");
                for (var i = 0; i < System.Math.Ceiling$$Decimal(this.get_TotalCount() / this.get_PageSize().get_Value()); i++)
                {
                    writer.Tag("li").Attribute("class", ((this.get_PageIndex() != null ? this.get_PageIndex() : 0) == i) ? "active" : "").Tag("a").Attribute("href", (i != 0) ? ("?PageIndex=" + i) : "?").Content$$Object(i + 1).CloseFullTag().CloseFullTag();
                }
                writer.CloseFullTag();
            }
        },
        OnLoadData: function (models)
        {
            this.isDataLoaded = true;
            var isEmpty = true;
            var itemTemplates = new System.Collections.Generic.List$1.ctor(System.Object.ctor);
            this.get_DataContext().Push(this, "Template");
            this.set_TotalCount(this.get_Source().GetTotalCount());
            var $it1 = models.GetEnumerator();
            while ($it1.MoveNext())
            {
                var model = $it1.get_Current();
                isEmpty = false;
                this.get_DataContext().Push(model, null);
                itemTemplates.Add(this.InitTemplate(this.get_ItemTemplate()));
                this.get_DataContext().Pop(null);
            }
            if (isEmpty && this.get_EmptyTemplate() != null)
            {
                this.set_Template(this.get_EmptyTemplate());
            }
            else
            {
                var templateContent = (function ()
                {
                    var $v1 = new Neptuo.TemplateEngine.Web.Controls.TemplateContentControl.ctor(this.get_ComponentManager());
                    $v1.set_Name("Content");
                    $v1.set_Content(itemTemplates);
                    return $v1;
                }).call(this);
                this.get_ComponentManager().AddComponent$1(Neptuo.TemplateEngine.Web.Controls.TemplateContentControl.ctor, templateContent, null);
                this.InitComponent(templateContent);
                this.get_Content().Add(templateContent);
            }
            Neptuo.TemplateEngine.Web.Controls.TemplateControl.commonPrototype.OnInit.call(this);
            this.get_DataContext().Pop("Template");
            this.get_DataContext().Pop("ListViewControlGuid");
            if (this.isRenderCalled)
            {
                var target = $("div[data-partial=listviewcontrol]");
                var stringWriter = new System.IO.StringWriter.ctor();
                var writer = new Neptuo.Templates.HtmlTextWriter.ctor(stringWriter);
                this.Render(writer);
                target.html(stringWriter.toString());
            }
        }
    },
    ctors: [ {name: "ctor", parameters: ["Neptuo.Templates.IComponentManager", "Neptuo.TemplateEngine.Web.TemplateContentStorageStack", "Neptuo.TemplateEngine.Web.DataContextStorage"]}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$Controls$ListViewControl);
var Neptuo$TemplateEngine$Web$DataSources$IListDataSource = {fullname: "Neptuo.TemplateEngine.Web.DataSources.IListDataSource", baseTypeName: "System.Object", assemblyName: "Neptuo.TemplateEngine.Client", Kind: "Interface", ctors: [], IsAbstract: true};
JsTypes.push(Neptuo$TemplateEngine$Web$DataSources$IListDataSource);
var Neptuo$TemplateEngine$Web$ExtendedHtmlTextWriter =
{
    fullname: "Neptuo.TemplateEngine.Web.ExtendedHtmlTextWriter",
    baseTypeName: "Neptuo.Templates.HtmlTextWriter",
    assemblyName: "Neptuo.TemplateEngine.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Web.IExtendedHtmlWriter"],
    Kind: "Class",
    definition:
    {
        ctor: function (writer)
        {
            this.pendingAttributes = new System.Collections.Generic.List$1.ctor(Neptuo.TemplateEngine.Web.ExtendedHtmlTextWriter.HtmlAttribute.ctor);
            Neptuo.Templates.HtmlTextWriter.ctor.call(this, writer);
        },
        AttributeOnNextTag: function (name, value)
        {
            this.pendingAttributes.Add(new Neptuo.TemplateEngine.Web.ExtendedHtmlTextWriter.HtmlAttribute.ctor$$String$$String(name, value));
            return this;
        },
        Tag: function (name)
        {
            Neptuo.Templates.HtmlTextWriter.commonPrototype.Tag.call(this, name);
            var $it2 = this.pendingAttributes.GetEnumerator();
            while ($it2.MoveNext())
            {
                var attribute = $it2.get_Current();
                this.Attribute(attribute.Name, attribute.Value);
            }
            this.pendingAttributes.Clear();
            return this;
        }
    },
    ctors: [ {name: "ctor", parameters: ["System.IO.TextWriter"]}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$ExtendedHtmlTextWriter);
var Neptuo$TemplateEngine$Web$ExtendedHtmlTextWriter$HtmlAttribute =
{
    fullname: "Neptuo.TemplateEngine.Web.ExtendedHtmlTextWriter.HtmlAttribute",
    baseTypeName: "System.ValueType",
    assemblyName: "Neptuo.TemplateEngine.Client",
    Kind: "Struct",
    definition:
    {
        ctor$$String$$String: function (name, value)
        {
            this.Name = null;
            this.Value = null;
            System.ValueType.ctor.call(this);
            this.Name = name;
            this.Value = value;
        },
        ctor: function ()
        {
            this.Name = null;
            this.Value = null;
            System.ValueType.ctor.call(this);
        }
    },
    ctors: [ {name: "ctor$$String$$String", parameters: ["System.String", "System.String"]}, {name: "ctor", parameters: []}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$ExtendedHtmlTextWriter$HtmlAttribute);
var Neptuo$TemplateEngine$Web$IExtendedHtmlWriter = {fullname: "Neptuo.TemplateEngine.Web.IExtendedHtmlWriter", baseTypeName: "System.Object", assemblyName: "Neptuo.TemplateEngine.Client", interfaceNames: ["Neptuo.Templates.IHtmlWriter"], Kind: "Interface", ctors: [], IsAbstract: true};
JsTypes.push(Neptuo$TemplateEngine$Web$IExtendedHtmlWriter);
var Neptuo$TemplateEngine$Web$Client$StaticViewActivator =
{
    fullname: "Neptuo.TemplateEngine.Web.Client.StaticViewActivator",
    baseTypeName: "System.Object",
    staticDefinition:
    {
        cctor: function ()
        {
            Neptuo.TemplateEngine.Web.Client.StaticViewActivator.mappings = new System.Collections.Generic.Dictionary$2.ctor(System.String.ctor, System.Type.ctor);
        },
        Add: function (viewPath, viewType)
        {
            Neptuo.TemplateEngine.Web.Client.StaticViewActivator.mappings.set_Item$$TKey(viewPath, viewType);
        }
    },
    assemblyName: "Neptuo.TemplateEngine.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Web.IViewActivator"],
    Kind: "Class",
    definition:
    {
        ctor: function (dependencyProvider)
        {
            this.dependencyProvider = null;
            System.Object.ctor.call(this);
            this.dependencyProvider = dependencyProvider;
        },
        CreateView: function (path)
        {
            var viewType;
            if ((function ()
            {
                var $1 = {Value: viewType};
                var $res = Neptuo.TemplateEngine.Web.Client.StaticViewActivator.mappings.TryGetValue(path, $1);
                viewType = $1.Value;
                return $res;
            }).call(this))
                return Cast(Neptuo.DependencyProviderExtensions.Resolve$$IDependencyProvider$$Type(this.dependencyProvider, viewType), Neptuo.Templates.BaseGeneratedView.ctor);
            throw $CreateException(new System.NotImplementedException.ctor(), new Error());
        }
    },
    ctors: [ {name: "ctor", parameters: ["Neptuo.IDependencyProvider"]}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$Client$StaticViewActivator);
var Neptuo$TemplateEngine$Web$GeneratedViewBase =
{
    fullname: "Neptuo.TemplateEngine.Web.GeneratedViewBase",
    baseTypeName: "Neptuo.Templates.BaseGeneratedView",
    assemblyName: "Neptuo.TemplateEngine.Client",
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            this.urlProvider = null;
            Neptuo.Templates.BaseGeneratedView.ctor.call(this);
        },
        ResolveUrl: function (relativeUrl)
        {
            if (this.urlProvider == null)
                this.urlProvider = Neptuo.DependencyProviderExtensions.Resolve$1$$IDependencyProvider(Neptuo.Templates.IVirtualUrlProvider.ctor, this.dependencyProvider);
            return this.urlProvider.ResolveUrl(relativeUrl);
        },
        CastValueTo$1: function (T, value)
        {
            if (value == null)
                return null;
            var sourceType = value.GetType();
            var targetType = Typeof(T);
            if (sourceType == targetType)
                return Cast(value, T);
            if (targetType == Typeof(System.String.ctor))
                return value.toString();
            return value;
        }
    },
    ctors: [ {name: "ctor", parameters: []}],
    IsAbstract: true
};
JsTypes.push(Neptuo$TemplateEngine$Web$GeneratedViewBase);
var Neptuo$TemplateEngine$Web$Client$InitScript =
{
    fullname: "Neptuo.TemplateEngine.Web.Client.InitScript",
    baseTypeName: "System.Object",
    staticDefinition:
    {
        Init: function (container)
        {
            Neptuo.DependencyContainerExtensions.RegisterInstance$1(Neptuo.TemplateEngine.Web.IViewActivator.ctor, Neptuo.DependencyContainerExtensions.RegisterInstance$1(Neptuo.TemplateEngine.Web.DataContextStorage.ctor, Neptuo.DependencyContainerExtensions.RegisterInstance$1(Neptuo.TemplateEngine.Web.TemplateContentStorageStack.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.TemplateEngine.Web.IValueConverterService.ctor, Neptuo.TemplateEngine.Web.ValueConverterService.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.TemplateEngine.Web.IBindingManager.ctor, Neptuo.TemplateEngine.Web.BindingManagerBase.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.TemplateEngine.Web.IParameterProvider.ctor, Neptuo.TemplateEngine.Web.Client.ParameterProvider.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.TemplateEngine.Web.IParameterProviderFactory.ctor, Neptuo.TemplateEngine.Web.Client.ParameterProviderFactory.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.TemplateEngine.Web.ICurrentUrlProvider.ctor, Neptuo.TemplateEngine.Web.Client.UrlProvider.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.Templates.IVirtualUrlProvider.ctor, Neptuo.TemplateEngine.Web.Client.UrlProvider.ctor, Neptuo.DependencyContainerExtensions.RegisterType$2$$IDependencyContainer(Neptuo.TemplateEngine.IStackStorage$1.ctor, Neptuo.TemplateEngine.StackStorage$1.ctor, container))))))), new Neptuo.TemplateEngine.Web.TemplateContentStorageStack.ctor()), new Neptuo.TemplateEngine.Web.DataContextStorage.ctor()), new Neptuo.TemplateEngine.Web.Client.StaticViewActivator.ctor(container));
        }
    },
    assemblyName: "Neptuo.TemplateEngine.Client",
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            System.Object.ctor.call(this);
        }
    },
    ctors: [],
    IsAbstract: true
};
JsTypes.push(Neptuo$TemplateEngine$Web$Client$InitScript);
var Neptuo$TemplateEngine$Web$Client$UrlProvider =
{
    fullname: "Neptuo.TemplateEngine.Web.Client.UrlProvider",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Client",
    interfaceNames: ["Neptuo.Templates.IVirtualUrlProvider", "Neptuo.TemplateEngine.Web.ICurrentUrlProvider"],
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            System.Object.ctor.call(this);
        },
        ResolveUrl: function (path)
        {
            return path.Replace$$String$$String("~/", "/");
        },
        GetCurrentUrl: function ()
        {
            return location.href;
        }
    },
    ctors: [ {name: "ctor", parameters: []}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$Client$UrlProvider);
var Neptuo$TemplateEngine$Web$Client$ParameterProviderFactory =
{
    fullname: "Neptuo.TemplateEngine.Web.Client.ParameterProviderFactory",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Web.IParameterProviderFactory"],
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            System.Object.ctor.call(this);
        },
        Provider: function (providerType)
        {
            return new Neptuo.TemplateEngine.Web.Client.ParameterProvider.ctor();
        }
    },
    ctors: [ {name: "ctor", parameters: []}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$Client$ParameterProviderFactory);
var Neptuo$TemplateEngine$Web$Client$ParameterProvider =
{
    fullname: "Neptuo.TemplateEngine.Web.Client.ParameterProvider",
    baseTypeName: "System.Object",
    assemblyName: "Neptuo.TemplateEngine.Client",
    interfaceNames: ["Neptuo.TemplateEngine.Web.IParameterProvider"],
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            System.Object.ctor.call(this);
        },
        Keys$$: "System.Collections.Generic.IEnumerable`1[[System.String]]",
        get_Keys: function ()
        {
            return new System.Collections.Generic.List$1.ctor(System.String.ctor);
        },
        TryGet: function (key, value)
        {
            value.Value = null;
            return false;
        }
    },
    ctors: [ {name: "ctor", parameters: []}],
    IsAbstract: false
};
JsTypes.push(Neptuo$TemplateEngine$Web$Client$ParameterProvider);
